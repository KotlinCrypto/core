// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, wasmWasi, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <org.kotlincrypto.core:core>
open annotation class org.kotlincrypto.core/ExperimentalKotlinCryptoApi : kotlin/Annotation { // org.kotlincrypto.core/ExperimentalKotlinCryptoApi|null[0]
    constructor <init>() // org.kotlincrypto.core/ExperimentalKotlinCryptoApi.<init>|<init>(){}[0]
}

open annotation class org.kotlincrypto.core/InternalKotlinCryptoApi : kotlin/Annotation { // org.kotlincrypto.core/InternalKotlinCryptoApi|null[0]
    constructor <init>() // org.kotlincrypto.core/InternalKotlinCryptoApi.<init>|<init>(){}[0]
}

abstract interface <#A: out kotlin/Any> org.kotlincrypto.core/Copyable { // org.kotlincrypto.core/Copyable|null[0]
    abstract fun copy(): #A // org.kotlincrypto.core/Copyable.copy|copy(){}[0]
}

abstract interface org.kotlincrypto.core/Algorithm { // org.kotlincrypto.core/Algorithm|null[0]
    abstract fun algorithm(): kotlin/String // org.kotlincrypto.core/Algorithm.algorithm|algorithm(){}[0]
}

abstract interface org.kotlincrypto.core/Resettable { // org.kotlincrypto.core/Resettable|null[0]
    abstract fun reset() // org.kotlincrypto.core/Resettable.reset|reset(){}[0]
}

abstract interface org.kotlincrypto.core/Updatable { // org.kotlincrypto.core/Updatable|null[0]
    abstract fun update(kotlin/Byte) // org.kotlincrypto.core/Updatable.update|update(kotlin.Byte){}[0]
    abstract fun update(kotlin/ByteArray) // org.kotlincrypto.core/Updatable.update|update(kotlin.ByteArray){}[0]
    abstract fun update(kotlin/ByteArray, kotlin/Int, kotlin/Int) // org.kotlincrypto.core/Updatable.update|update(kotlin.ByteArray;kotlin.Int;kotlin.Int){}[0]
}

sealed class org.kotlincrypto.core/Counter : org.kotlincrypto.core/Copyable<org.kotlincrypto.core/Counter>, org.kotlincrypto.core/Resettable { // org.kotlincrypto.core/Counter|null[0]
    abstract fun increment() // org.kotlincrypto.core/Counter.increment|increment(){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // org.kotlincrypto.core/Counter.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // org.kotlincrypto.core/Counter.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // org.kotlincrypto.core/Counter.toString|toString(){}[0]

    final class Bit32 : org.kotlincrypto.core/Counter { // org.kotlincrypto.core/Counter.Bit32|null[0]
        constructor <init>(kotlin/Int) // org.kotlincrypto.core/Counter.Bit32.<init>|<init>(kotlin.Int){}[0]
        constructor <init>(kotlin/Int, kotlin/Int, kotlin/Int) // org.kotlincrypto.core/Counter.Bit32.<init>|<init>(kotlin.Int;kotlin.Int;kotlin.Int){}[0]

        final val incrementBy // org.kotlincrypto.core/Counter.Bit32.incrementBy|{}incrementBy[0]
            final fun <get-incrementBy>(): kotlin/Int // org.kotlincrypto.core/Counter.Bit32.incrementBy.<get-incrementBy>|<get-incrementBy>(){}[0]

        final var hi // org.kotlincrypto.core/Counter.Bit32.hi|{}hi[0]
            final fun <get-hi>(): kotlin/Int // org.kotlincrypto.core/Counter.Bit32.hi.<get-hi>|<get-hi>(){}[0]
        final var lo // org.kotlincrypto.core/Counter.Bit32.lo|{}lo[0]
            final fun <get-lo>(): kotlin/Int // org.kotlincrypto.core/Counter.Bit32.lo.<get-lo>|<get-lo>(){}[0]

        final fun copy(): org.kotlincrypto.core/Counter.Bit32 // org.kotlincrypto.core/Counter.Bit32.copy|copy(){}[0]
        final fun final(kotlin/Int): org.kotlincrypto.core/Counter.Bit32.Final // org.kotlincrypto.core/Counter.Bit32.final|final(kotlin.Int){}[0]
        final fun increment() // org.kotlincrypto.core/Counter.Bit32.increment|increment(){}[0]
        final fun reset() // org.kotlincrypto.core/Counter.Bit32.reset|reset(){}[0]

        final class Final { // org.kotlincrypto.core/Counter.Bit32.Final|null[0]
            final val hi // org.kotlincrypto.core/Counter.Bit32.Final.hi|{}hi[0]
                final fun <get-hi>(): kotlin/Int // org.kotlincrypto.core/Counter.Bit32.Final.hi.<get-hi>|<get-hi>(){}[0]
            final val lo // org.kotlincrypto.core/Counter.Bit32.Final.lo|{}lo[0]
                final fun <get-lo>(): kotlin/Int // org.kotlincrypto.core/Counter.Bit32.Final.lo.<get-lo>|<get-lo>(){}[0]

            final fun asBits(): org.kotlincrypto.core/Counter.Bit32.Final // org.kotlincrypto.core/Counter.Bit32.Final.asBits|asBits(){}[0]
            final fun component1(): kotlin/Int // org.kotlincrypto.core/Counter.Bit32.Final.component1|component1(){}[0]
            final fun component2(): kotlin/Int // org.kotlincrypto.core/Counter.Bit32.Final.component2|component2(){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // org.kotlincrypto.core/Counter.Bit32.Final.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // org.kotlincrypto.core/Counter.Bit32.Final.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // org.kotlincrypto.core/Counter.Bit32.Final.toString|toString(){}[0]
        }

        final object Companion { // org.kotlincrypto.core/Counter.Bit32.Companion|null[0]
            final const val MAX_INCREMENT // org.kotlincrypto.core/Counter.Bit32.Companion.MAX_INCREMENT|{}MAX_INCREMENT[0]
                final fun <get-MAX_INCREMENT>(): kotlin/Int // org.kotlincrypto.core/Counter.Bit32.Companion.MAX_INCREMENT.<get-MAX_INCREMENT>|<get-MAX_INCREMENT>(){}[0]
        }
    }

    final class Bit64 : org.kotlincrypto.core/Counter { // org.kotlincrypto.core/Counter.Bit64|null[0]
        constructor <init>(kotlin/Long) // org.kotlincrypto.core/Counter.Bit64.<init>|<init>(kotlin.Long){}[0]
        constructor <init>(kotlin/Long, kotlin/Long, kotlin/Long) // org.kotlincrypto.core/Counter.Bit64.<init>|<init>(kotlin.Long;kotlin.Long;kotlin.Long){}[0]

        final val incrementBy // org.kotlincrypto.core/Counter.Bit64.incrementBy|{}incrementBy[0]
            final fun <get-incrementBy>(): kotlin/Long // org.kotlincrypto.core/Counter.Bit64.incrementBy.<get-incrementBy>|<get-incrementBy>(){}[0]

        final var hi // org.kotlincrypto.core/Counter.Bit64.hi|{}hi[0]
            final fun <get-hi>(): kotlin/Long // org.kotlincrypto.core/Counter.Bit64.hi.<get-hi>|<get-hi>(){}[0]
        final var lo // org.kotlincrypto.core/Counter.Bit64.lo|{}lo[0]
            final fun <get-lo>(): kotlin/Long // org.kotlincrypto.core/Counter.Bit64.lo.<get-lo>|<get-lo>(){}[0]

        final fun copy(): org.kotlincrypto.core/Counter.Bit64 // org.kotlincrypto.core/Counter.Bit64.copy|copy(){}[0]
        final fun final(kotlin/Int): org.kotlincrypto.core/Counter.Bit64.Final // org.kotlincrypto.core/Counter.Bit64.final|final(kotlin.Int){}[0]
        final fun increment() // org.kotlincrypto.core/Counter.Bit64.increment|increment(){}[0]
        final fun reset() // org.kotlincrypto.core/Counter.Bit64.reset|reset(){}[0]

        final class Final { // org.kotlincrypto.core/Counter.Bit64.Final|null[0]
            final val hi // org.kotlincrypto.core/Counter.Bit64.Final.hi|{}hi[0]
                final fun <get-hi>(): kotlin/Long // org.kotlincrypto.core/Counter.Bit64.Final.hi.<get-hi>|<get-hi>(){}[0]
            final val lo // org.kotlincrypto.core/Counter.Bit64.Final.lo|{}lo[0]
                final fun <get-lo>(): kotlin/Long // org.kotlincrypto.core/Counter.Bit64.Final.lo.<get-lo>|<get-lo>(){}[0]

            final fun asBits(): org.kotlincrypto.core/Counter.Bit64.Final // org.kotlincrypto.core/Counter.Bit64.Final.asBits|asBits(){}[0]
            final fun component1(): kotlin/Long // org.kotlincrypto.core/Counter.Bit64.Final.component1|component1(){}[0]
            final fun component2(): kotlin/Long // org.kotlincrypto.core/Counter.Bit64.Final.component2|component2(){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // org.kotlincrypto.core/Counter.Bit64.Final.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // org.kotlincrypto.core/Counter.Bit64.Final.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // org.kotlincrypto.core/Counter.Bit64.Final.toString|toString(){}[0]
        }

        final object Companion { // org.kotlincrypto.core/Counter.Bit64.Companion|null[0]
            final const val MAX_INCREMENT // org.kotlincrypto.core/Counter.Bit64.Companion.MAX_INCREMENT|{}MAX_INCREMENT[0]
                final fun <get-MAX_INCREMENT>(): kotlin/Long // org.kotlincrypto.core/Counter.Bit64.Companion.MAX_INCREMENT.<get-MAX_INCREMENT>|<get-MAX_INCREMENT>(){}[0]
        }
    }
}
